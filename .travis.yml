# This code is taken from Keras .travis file. 
dist: trusty
language: python

install:
  # code below is taken from http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - travis_retry conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment

  - travis_retry pip install --only-binary=numpy,scipy,pandas numpy nose scipy h5py pytest pytest-pep8 pandas --progress-bar off

  # set library path
  - export LD_LIBRARY_PATH=$HOME/miniconda/envs/test-environment/lib/:$LD_LIBRARY_PATH

    # install pydot for visualization tests
  - travis_retry conda install -q $MKL pydot graphviz $PIL

  - pip install -e .[tests] --progress-bar off

  # install TensorFlow (CPU version).
  - pip install tensorflow==1.14.0 --progress-bar off

  # install Keras.
  - pip install keras==2.2.4 --progress-bar off

  # install Sciann.
  - pip install sciann --progress-bar off

  # install mkdocs
  - pip install mkdocs --progress-bar off

  # install pyux
  - pip install pyux

# command to run tests
script:
  - export MKL_THREADING_LAYER="GNU"
  # create dataset directory to avoid concurrent directory creation at runtime
  - mkdir ~/.sciann/datasets
  # set up sciann backend
  - sed -i -e 's/"backend":[[:space:]]*"[^"]*/"backend":\ "'$SCIANN_BACKEND'/g' ~/.sciann/sciann.json;
  - echo -e "Running tests with the following config:\n$(cat ~/.sciann/sciann.json)"
  - if [[ "$TEST_MODE" == "INTEGRATION_TESTS" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH py.test tests/integration_tests;
    elif [[ "$TEST_MODE" == "PEP8_DOC" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH py.test --pep8 -m pep8 -n0 && py.test tests/docs;
    elif [[ "$TEST_MODE" == "API" ]]; then
      PYTHONPATH=$PWD:$PYTHONPATH pip install git+git://www.github.com/sicann/sciann.git && python update_api.py && pip install -e .[tests] --progress-bar off && py.test tests/test_api.py;
    else
      PYTHONPATH=$PWD:$PYTHONPATH py.test tests/ --ignore=tests/integration_tests --ignore=tests/docs --ignore=tests/keras/legacy/layers_test.py --ignore=tests/test_api.py --cov-config .coveragerc --cov=keras tests/;
    fi
